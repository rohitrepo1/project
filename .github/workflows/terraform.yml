Skip to content
Search or jump toâ€¦
Pull requests
Issues
Marketplace
Explore
 
@rohitrepo1 
rohitrepo1
/
eth-poject
Public
Code
Issues
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
Add files via upload Terraform #28
Summary
Workflow file
Jobs
Terraform
Workflow file for this run
.github/workflows/terraform.yml at fdc5d57
name: 'Terraform'

on:
  push:
    branches:
    - master
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: QA

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      env: 
        AWS Access Key ID: ${{ secrets.ACCESS_KEY }}
        AWS Secret Access Key: ${{ secrets.SECRET_ACCESS_KEY}}
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        AWS Access Key ID: ${{ secrets.ACCESS_KEY }}
        AWS Secret Access Key: ${{ secrets.SECRET_ACCESS_KEY}}
      run: terraform plan -input=false

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
